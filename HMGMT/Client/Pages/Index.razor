@page "/"
@using HMGMT.Shared.Models
@inject IJSRuntime JsRuntime;
@inject NavigationManager NavMan;
@inject HttpClient Http


<PageTitle>Dashboard</PageTitle>
<div class="container-fluid">
    <h1>DASHBOARD</h1>
    <br/>
    <MainCard @ref="thermostatCard"
              Header="THERMOSTAT"
              IconSource="assets/thermostat.png"
              UpMethod="ThermostatUpClicked"
              DownMethod="ThermostatDownClicked"
              NavToDetails="@(() => NavigateTo("/thermostatdata"))"
              DeviceTemp="@_thermostatModel?.DampedOutdoorTemperature.ToString("G")"
              IconWidth="50"/>
    <br/>
    <MainCard Header="BOILER"
              IconSource="assets/boiler.png"
              IconWidth="60"
              DeviceTemp="@_boilerModel?.SelectedFlowTemperature.ToString("G")"
              NavToDetails="@(() =>NavigateTo("/boilerdata"))"/>

    <br/>
    <h1>MIXERS</h1>
</div>
<br/>
<div class="swiper mySwiper">
    <div class="swiper-wrapper">
        <div class="swiper-slide">
            @* TODO: Nav *@
            <SwipeCard Header="HC1" NavToDetails="@(() => NavigateTo("/mixerdata/hc1"))"/>
        </div>
        <div class="swiper-slide">
            <SwipeCard Header="HC2" NavToDetails="@(() =>NavigateTo("/mixerdata/hc2"))"/>
        </div>
        <div class="swiper-slide">
            <SwipeCard Header="HC3" NavToDetails="@(() =>NavigateTo("/mixerdata/hc3"))"/>
        </div>
    </div>
</div>

@code {
    
    MainCard? boilerCard;
    MainCard? thermostatCard;
    BoilerModel? _boilerModel;
    ThermostatModel? _thermostatModel;
    readonly string _baseUrl = @"http://localhost:5039/api";
    bool ischecked = false;

    protected override async Task OnInitializedAsync()
    {
        _boilerModel = await Http.GetFromJsonAsync<BoilerModel>(_baseUrl + "/boiler");
        _thermostatModel = await Http.GetFromJsonAsync<ThermostatModel>(_baseUrl + "/thermostat");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JsRuntime.InvokeVoidAsync("initSwiper", null);
    }

    void ThermostatUpClicked()
    {
    //TODO: THERMOSTAT UP
        var oldTemp = _thermostatModel?.DampedOutdoorTemperature + 0.5;
        if (_thermostatModel != null)_thermostatModel.DampedOutdoorTemperature += 0.5;
        if (thermostatCard != null) thermostatCard.DeviceTemp = oldTemp?.ToString("F1");
    }

    void ThermostatDownClicked()
    {
    //TODO: THERMOSTAT DOWN
        var oldTemp = _thermostatModel?.DampedOutdoorTemperature - 0.5;
        if (_thermostatModel != null) _thermostatModel.DampedOutdoorTemperature -= 0.5;
        if (thermostatCard != null) thermostatCard.DeviceTemp = oldTemp?.ToString("F1");
    }
    void NavigateTo(string route)
    {
        NavMan.NavigateTo(route);
    }

    void NavigateToMixer(string mixerId)
    {
        NavMan.NavigateTo($"/mixerdata/{mixerId}");
    }
}