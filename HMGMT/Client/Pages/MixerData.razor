@page "/mixerdata/{MixerId}"
@using System.Reflection
@using HMGMT.Shared.Models
@inject HttpClient Http
@inject NavigationManager NavMan;

<div class="container-fluid pt-2">
    <div class="row">
        <span @onclick="NavBack" style="cursor: pointer">
            <img src="assets/back.png" width="20" />
        </span>
    </div>
    <br />
    <div class="row">
        <div class="col-8">
            <h1>@MixerId.ToUpper()</h1>
        </div>
        <div class="col-4 text-end">
            <img src="assets/mixer_accent.png" width="50" />
        </div>
    </div>
<div class="row">
    <table class="table tab hmgmt-table">
        <tbody>
        @if (_model != null)
        {
            PropertyInfo[] properties = typeof(MixerModel).GetProperties();
            foreach (PropertyInfo property in properties)
            {
                <tr>
                    <td style="font-weight:700;font-size: 0.8em">@property.Name</td>
                    <td class="text-end">@property.GetValue(_model)?.ToString()</td>
                </tr>
            }
        }
        </tbody>
    </table>
</div>
</div>
    <SfToast @ref="Toast" Title="Error" ShowCloseButton="true">
        <ToastPosition X="Center" Y="Bottom"/>
    </SfToast>
<style>
    .e-toast-container .e-toast {
        background-color: #11E3C7;
    }
</style>
@code {
    [Parameter]
    public string? MixerId { get; set; }
    
    MixerModel? _model;
    SfToast Toast { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _model = await Http.GetFromJsonAsync<MixerModel>( $"{UrlConstants.apiUrl}mixer/{MixerId}");
        }
        catch (Exception e)
        {
            Toast.Content = "Cannot get Mixer data from Server";
            await Toast.ShowAsync();
        }
    }

    void NavBack()
    {
        NavMan.NavigateTo("/");
    }
}
